// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Modelo.Infra.Data.Contexto;

namespace Modelo.Infra.Data.Migrations
{
    [DbContext(typeof(ApiContexto))]
    [Migration("20190615161330_VersaoBanco_001")]
    partial class VersaoBanco_001
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Modelo.Domain.Entidades.CadastrosIniciais.Cep", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CidadeId");

                    b.Property<long>("Cidade_Id");

                    b.Property<string>("CodigoEnderecamentoPostal");

                    b.Property<DateTime>("TimesTamp");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.ToTable("Cep");
                });

            modelBuilder.Entity("Modelo.Domain.Entidades.CadastrosIniciais.Cidade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoIbge");

                    b.Property<long?>("EstadoId");

                    b.Property<long>("Estado_Id");

                    b.Property<string>("Nome");

                    b.Property<DateTime>("TimesTamp");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("Cidade");
                });

            modelBuilder.Entity("Modelo.Domain.Entidades.CadastrosIniciais.Estado", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome");

                    b.Property<long?>("PaisId");

                    b.Property<long>("Pais_Id");

                    b.Property<string>("Sigla");

                    b.Property<DateTime>("TimesTamp");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("Modelo.Domain.Entidades.CadastrosIniciais.Pais", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Codigo")
                        .HasColumnType("VARCHAR(10)")
                        .HasDefaultValue("");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("Observacoes")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Observacoes")
                        .HasColumnType("VARCHAR(MAX)")
                        .HasDefaultValue("");

                    b.Property<DateTime>("TimesTamp")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("TimesTamp")
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("Modelo.Domain.Entidades.CadastrosIniciais.ParceiroNegocio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<string>("Bairro");

                    b.Property<long?>("CepId");

                    b.Property<long>("Cep_Id");

                    b.Property<bool>("Cliente");

                    b.Property<string>("Codigo");

                    b.Property<string>("Complemento");

                    b.Property<string>("CpfCnpj");

                    b.Property<string>("Email");

                    b.Property<string>("Endereco");

                    b.Property<string>("Fantasia");

                    b.Property<bool>("Fonecedor");

                    b.Property<string>("NumeroEndereco");

                    b.Property<string>("RazaoSocial");

                    b.Property<string>("Telefone");

                    b.Property<DateTime>("TimesTamp");

                    b.Property<bool>("Tipo");

                    b.Property<long?>("TipoDocumentoId");

                    b.Property<long>("TipoDocumento_Id");

                    b.HasKey("Id");

                    b.HasIndex("CepId");

                    b.HasIndex("TipoDocumentoId");

                    b.ToTable("ParceiroNegocio");
                });

            modelBuilder.Entity("Modelo.Domain.Entidades.CadastrosIniciais.TipoDocumento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo");

                    b.Property<string>("Descricao");

                    b.Property<DateTime>("TimesTamp");

                    b.HasKey("Id");

                    b.ToTable("TipoDocumento");
                });

            modelBuilder.Entity("Modelo.Domain.Entidades.CadastrosIniciais.Cep", b =>
                {
                    b.HasOne("Modelo.Domain.Entidades.CadastrosIniciais.Cidade", "Cidade")
                        .WithMany("Ceps")
                        .HasForeignKey("CidadeId");
                });

            modelBuilder.Entity("Modelo.Domain.Entidades.CadastrosIniciais.Cidade", b =>
                {
                    b.HasOne("Modelo.Domain.Entidades.CadastrosIniciais.Estado", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("EstadoId");
                });

            modelBuilder.Entity("Modelo.Domain.Entidades.CadastrosIniciais.Estado", b =>
                {
                    b.HasOne("Modelo.Domain.Entidades.CadastrosIniciais.Pais", "Pais")
                        .WithMany("Estados")
                        .HasForeignKey("PaisId");
                });

            modelBuilder.Entity("Modelo.Domain.Entidades.CadastrosIniciais.ParceiroNegocio", b =>
                {
                    b.HasOne("Modelo.Domain.Entidades.CadastrosIniciais.Cep", "Cep")
                        .WithMany("ParceiroNegocios")
                        .HasForeignKey("CepId");

                    b.HasOne("Modelo.Domain.Entidades.CadastrosIniciais.TipoDocumento", "TipoDocumento")
                        .WithMany("ParceiroNegocios")
                        .HasForeignKey("TipoDocumentoId");
                });
#pragma warning restore 612, 618
        }
    }
}
