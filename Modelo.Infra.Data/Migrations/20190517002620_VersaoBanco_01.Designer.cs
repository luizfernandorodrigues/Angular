// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Modelo.Infra.Data.Contexto;

namespace Modelo.Infra.Data.Migrations
{
    [DbContext(typeof(ApiContexto))]
    [Migration("20190517002620_VersaoBanco_01")]
    partial class VersaoBanco_01
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Modelo.Domain.Entidades.CadastrosIniciais.Cep", b =>
                {
                    b.Property<Guid>("Ukey")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Ukey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Cidade_Ukey")
                        .HasColumnName("Cidade_Ukey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoEnderecamentoPostal")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CodigoEnderecamentoPostal")
                        .HasColumnType("nvarchar")
                        .HasMaxLength(8)
                        .HasDefaultValue("");

                    b.Property<Guid?>("Empresa_Ukey");

                    b.Property<DateTime>("TimesTamp");

                    b.Property<Guid?>("Usuario_Ukey");

                    b.HasKey("Ukey");

                    b.HasIndex("Cidade_Ukey");

                    b.ToTable("Cep");
                });

            modelBuilder.Entity("Modelo.Domain.Entidades.CadastrosIniciais.Cidade", b =>
                {
                    b.Property<Guid>("Ukey")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Ukey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoIbge")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CodigoIbge")
                        .HasColumnType("nvarchar")
                        .HasMaxLength(7)
                        .HasDefaultValue("0");

                    b.Property<Guid?>("Empresa_Ukey");

                    b.Property<Guid>("Estado_Ukey")
                        .HasColumnName("Estado_Ukey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("nvarchar")
                        .HasMaxLength(100);

                    b.Property<DateTime>("TimesTamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TimesTamp")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid?>("Usuario_Ukey");

                    b.HasKey("Ukey");

                    b.HasIndex("Estado_Ukey");

                    b.ToTable("Cidade");
                });

            modelBuilder.Entity("Modelo.Domain.Entidades.CadastrosIniciais.Estado", b =>
                {
                    b.Property<Guid>("Ukey")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Ukey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Empresa_Ukey")
                        .HasColumnName("Empresa_Ukey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("nvarchar")
                        .HasMaxLength(100);

                    b.Property<Guid>("Pais_Ukey")
                        .HasColumnName("Pais_Ukey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnName("Sigla")
                        .HasColumnType("nvarchar")
                        .HasMaxLength(2);

                    b.Property<DateTime>("TimesTamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TimesTamp")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid?>("Usuario_Ukey");

                    b.HasKey("Ukey");

                    b.HasIndex("Pais_Ukey");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("Modelo.Domain.Entidades.CadastrosIniciais.Pais", b =>
                {
                    b.Property<Guid>("Ukey")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Ukey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .HasColumnName("Codigo")
                        .HasColumnType("nvarchar")
                        .HasMaxLength(10);

                    b.Property<Guid?>("Empresa_Ukey")
                        .HasColumnName("Empresa_Ukey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("nvarchar")
                        .HasMaxLength(100);

                    b.Property<string>("Observacoes")
                        .HasColumnName("Observacoes")
                        .HasColumnType("nvarchar")
                        .HasMaxLength(4000);

                    b.Property<DateTime>("TimesTamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TimesTamp")
                        .HasColumnType("DateTime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid?>("Usuario_Ukey");

                    b.HasKey("Ukey");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("Modelo.Domain.Entidades.CadastrosIniciais.Cep", b =>
                {
                    b.HasOne("Modelo.Domain.Entidades.CadastrosIniciais.Cidade", "Cidade")
                        .WithMany("Ceps")
                        .HasForeignKey("Cidade_Ukey")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Modelo.Domain.Entidades.CadastrosIniciais.Cidade", b =>
                {
                    b.HasOne("Modelo.Domain.Entidades.CadastrosIniciais.Estado", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("Estado_Ukey")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Modelo.Domain.Entidades.CadastrosIniciais.Estado", b =>
                {
                    b.HasOne("Modelo.Domain.Entidades.CadastrosIniciais.Pais", "Pais")
                        .WithMany("Estados")
                        .HasForeignKey("Pais_Ukey")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
